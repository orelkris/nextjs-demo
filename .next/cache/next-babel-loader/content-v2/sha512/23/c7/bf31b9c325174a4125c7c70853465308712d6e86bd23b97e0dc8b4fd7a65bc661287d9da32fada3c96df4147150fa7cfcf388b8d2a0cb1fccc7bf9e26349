{"ast":null,"code":"import _regeneratorRuntime from \"/home/krisassaurus/repos/learningNext/02-starting-project-repeat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/krisassaurus/repos/learningNext/02-starting-project-repeat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/krisassaurus/repos/learningNext/02-starting-project-repeat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/krisassaurus/repos/learningNext/02-starting-project-repeat/pages/[meetupId]/index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment } from 'react';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nvar MeetupDetail = function MeetupDetail() {\n  var meetupDetails = {\n    id: 'm1',\n    title: 'first meetups',\n    image: {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/a/ab/Panorama_of_Moscow_Kremlin.jpg',\n      alt: 'Kremlin and Red Square'\n    },\n    address: 'Red Square, Moscow',\n    description: 'This is a first meetup'\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, _objectSpread({}, meetupDetails), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetail;\nexport var __N_SSG = true;\nexport function connect() {\n  return _connect.apply(this, arguments);\n}\n\nfunction _connect() {\n  _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var connect, db, meetupsCollection, meetupsFind;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect('mongodb+srv://krisassaurus:G6882061Data!@cluster0.tovkjo4.mongodb.net/meetups?retryWrites=true&w=majority');\n\n          case 2:\n            connect = _context.sent;\n            db = connect.db();\n            meetupsCollection = db.collection('meetups');\n            _context.next = 7;\n            return meetupsCollection.find({}, {\n              _id: 1\n            }).toArray();\n\n          case 7:\n            meetupsFind = _context.sent;\n            connect.close();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connect.apply(this, arguments);\n}\n\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["/home/krisassaurus/repos/learningNext/02-starting-project-repeat/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetails","MongoClient","MeetupDetail","meetupDetails","id","title","image","src","alt","address","description","connect","db","meetupsCollection","collection","find","_id","toArray","meetupsFind","close"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,aAAa,GAAG;AACpBC,IAAAA,EAAE,EAAE,IADgB;AAEpBC,IAAAA,KAAK,EAAE,eAFa;AAGpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,oFADA;AAELC,MAAAA,GAAG,EAAE;AAFA,KAHa;AAOpBC,IAAAA,OAAO,EAAE,oBAPW;AAQpBC,IAAAA,WAAW,EAAE;AARO,GAAtB;AAWA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD,oBAAmBP,aAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAjBD;;KAAMD,Y;;AAmBN,gBAAsBS,OAAtB;AAAA;AAAA;;;sEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBV,WAAW,CAACU,OAAZ,CACpB,2GADoB,CADjB;;AAAA;AACCA,YAAAA,OADD;AAKCC,YAAAA,EALD,GAKMD,OAAO,CAACC,EAAR,EALN;AAOCC,YAAAA,iBAPD,GAOqBD,EAAE,CAACE,UAAH,CAAc,SAAd,CAPrB;AAAA;AAAA,mBASqBD,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,cAAAA,GAAG,EAAE;AAAP,aAA3B,EAAuCC,OAAvC,EATrB;;AAAA;AASCC,YAAAA,WATD;AAWLP,YAAAA,OAAO,CAACQ,KAAR;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA0DP,eAAejB,YAAf","sourcesContent":["import { Fragment } from 'react';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetail = () => {\n  const meetupDetails = {\n    id: 'm1',\n    title: 'first meetups',\n    image: {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/a/ab/Panorama_of_Moscow_Kremlin.jpg',\n      alt: 'Kremlin and Red Square',\n    },\n    address: 'Red Square, Moscow',\n    description: 'This is a first meetup',\n  };\n\n  return (\n    <Fragment>\n      <MeetupDetails {...meetupDetails} />\n    </Fragment>\n  );\n};\n\nexport async function connect() {\n  const connect = await MongoClient.connect(\n    'mongodb+srv://krisassaurus:G6882061Data!@cluster0.tovkjo4.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n\n  const db = connect.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetupsFind = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  connect.close();\n}\n\nexport async function getStaticPaths() {\n  connect();\n\n  return {\n    fallback: false,\n    paths: meetupsFind.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const connect = await MongoClient.connect(\n    'mongodb+srv://krisassaurus:G6882061Data!@cluster0.tovkjo4.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n\n  const db = connect.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetupsFind = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  connect.close();\n\n  const meetupId = context.params.meetupId;\n  console.log('MeetupId', meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: 'first meetups',\n        image: {\n          src: 'https://upload.wikimedia.org/wikipedia/commons/a/ab/Panorama_of_Moscow_Kremlin.jpg',\n          alt: 'Kremlin and Red Square',\n        },\n        address: 'Red Square, Moscow',\n        description: 'This is a first meetup',\n      },\n    },\n  };\n}\n\nexport default MeetupDetail;\n"]},"metadata":{},"sourceType":"module"}