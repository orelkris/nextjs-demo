{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/krisassaurus/repos/learningNext/02-starting-project-repeat/pages/index.js\";\nimport { Fragment } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'first meetups',\n  image: {\n    src: 'https://upload.wikimedia.org/wikipedia/commons/a/ab/Panorama_of_Moscow_Kremlin.jpg',\n    alt: 'Kremlin and Red Square'\n  },\n  address: 'Red Square, Moscow',\n  description: 'This is a first meetup'\n}, {\n  id: 'm2',\n  title: 'second meetups',\n  image: {\n    src: 'https://upload.wikimedia.org/wikipedia/commons/e/ed/Bercy%2C_Paris_01.jpg',\n    alt: 'Overhead shot of Paris and Seine'\n  },\n  address: 'Seine, Paris',\n  description: 'This is a second meetup'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const connect = await MongoClient.connect('mongodb+srv://krisassaurus:G6882061Data!@cluster0.tovkjo4.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = connect.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupsFind = await meetupsCollection.find({}).toArray();\n  connect.close();\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage; // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }","map":{"version":3,"sources":["/home/krisassaurus/repos/learningNext/02-starting-project-repeat/pages/index.js"],"names":["Fragment","MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","src","alt","address","description","HomePage","props","meetups","getStaticProps","connect","db","meetupsCollection","collection","meetupsFind","find","toArray","close","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,oFADA;AAELC,IAAAA,GAAG,EAAE;AAFA,GAHT;AAOEC,EAAAA,OAAO,EAAE,oBAPX;AAQEC,EAAAA,WAAW,EAAE;AARf,CADoB,EAWpB;AACEN,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,2EADA;AAELC,IAAAA,GAAG,EAAE;AAFA,GAHT;AAOEC,EAAAA,OAAO,EAAE,cAPX;AAQEC,EAAAA,WAAW,EAAE;AARf,CAXoB,CAAtB;;AAuBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMb,WAAW,CAACa,OAAZ,CACpB,2GADoB,CAAtB;AAIA,QAAMC,EAAE,GAAGD,OAAO,CAACC,EAAR,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,WAAW,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2BC,OAA3B,EAA1B;AAEAN,EAAAA,OAAO,CAACO,KAAR;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEV;AADJ,KADF;AAILoB,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAeZ,QAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { Fragment } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst DUMMY_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'first meetups',\n    image: {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/a/ab/Panorama_of_Moscow_Kremlin.jpg',\n      alt: 'Kremlin and Red Square',\n    },\n    address: 'Red Square, Moscow',\n    description: 'This is a first meetup',\n  },\n  {\n    id: 'm2',\n    title: 'second meetups',\n    image: {\n      src: 'https://upload.wikimedia.org/wikipedia/commons/e/ed/Bercy%2C_Paris_01.jpg',\n      alt: 'Overhead shot of Paris and Seine',\n    },\n    address: 'Seine, Paris',\n    description: 'This is a second meetup',\n  },\n];\n\nconst HomePage = (props) => {\n  return (\n    <Fragment>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n};\n\nexport async function getStaticProps() {\n  const connect = await MongoClient.connect(\n    'mongodb+srv://krisassaurus:G6882061Data!@cluster0.tovkjo4.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n\n  const db = connect.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetupsFind = await meetupsCollection.find({}).toArray();\n\n  connect.close();\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n    revalidate: 10,\n  };\n}\n\nexport default HomePage;\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   return {\n//     props: DUMMY_MEETUPS,\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}